Traceback (most recent call last):
  File "C:\Users\Hp\anaconda3\envs\MACHINE\lib\site-packages\jupyter_core\utils\__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Hp\anaconda3\envs\MACHINE\lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\Hp\anaconda3\envs\MACHINE\lib\site-packages\nbclient\client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\Hp\anaconda3\envs\MACHINE\lib\site-packages\jupyter_core\utils\__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
  File "C:\Users\Hp\anaconda3\envs\MACHINE\lib\asyncio\base_events.py", line 649, in run_until_complete
    return future.result()
  File "C:\Users\Hp\anaconda3\envs\MACHINE\lib\site-packages\nbclient\client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "C:\Users\Hp\anaconda3\envs\MACHINE\lib\site-packages\nbclient\client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\Hp\anaconda3\envs\MACHINE\lib\site-packages\nbclient\client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# VIF

# 1Ô∏è‚É£ Selecciona solo variables num√©ricas (excluyendo la variable objetivo 'default')
num_cols = df.select_dtypes(include=['float64', 'int64']).columns.tolist()
num_cols.remove('default')  # excluimos la variable objetivo

# 2Ô∏è‚É£ Opcional: si tienes variables altamente correlacionadas entre s√≠, puedes eliminar algunas para no inflar el VIF
num_cols.remove('cuota_mensual')
num_cols.remove('uso_tarjetas_credito')
num_cols.remove('meses_ultima_mora')

# 3Ô∏è‚É£ Prepara la matriz con constante
X = add_constant(df[num_cols])

# 4Ô∏è‚É£ Calcula VIF para cada variable
vif_data = pd.DataFrame()
vif_data['Variable'] = X.columns
vif_data['VIF'] = [variance_inflation_factor(X.values, i) for i in range(X.shape[1])]

# 5Ô∏è‚É£ Ordena por VIF descendente
print(vif_data[vif_data['VIF'] > 2].sort_values(by='VIF', ascending=False))
------------------


[1;31m---------------------------------------------------------------------------[0m
[1;31mNameError[0m                                 Traceback (most recent call last)
Cell [1;32mIn[6], line 13[0m
[0;32m     10[0m num_cols[38;5;241m.[39mremove([38;5;124m'[39m[38;5;124mmeses_ultima_mora[39m[38;5;124m'[39m)
[0;32m     12[0m [38;5;66;03m# 3Ô∏è‚É£ Prepara la matriz con constante[39;00m
[1;32m---> 13[0m X [38;5;241m=[39m [43madd_constant[49m(df[num_cols])
[0;32m     15[0m [38;5;66;03m# 4Ô∏è‚É£ Calcula VIF para cada variable[39;00m
[0;32m     16[0m vif_data [38;5;241m=[39m pd[38;5;241m.[39mDataFrame()

[1;31mNameError[0m: name 'add_constant' is not defined

